name: Build guppy

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_cli:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build]')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install Go dependencies
        run: go mod download

      - name: Build guppy
        env:
          VERSION: ${{ steps.gitversion.outputs.MajorMinorPatch }}
          POSTHOG_ENDPOINT: ${{ secrets.POSTHOG_ENDPOINT }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
        run: make build

      - name: Archive Binary
        id: archive
        env:
          VERSION: ${{ steps.gitversion.outputs.MajorMinorPatch }}
        run: |
          tar -czvf guppy-${{ env.VERSION }}.tar.gz ./cli/dist/guppy
          echo "GUPPYPATH=guppy-${{ env.VERSION }}.tar.gz" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: guppy
          path: ${{ steps.archive.outputs.GUPPYPATH }}
          retention-days: 1

  build_macos:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build]')
    needs: build_cli
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/download-artifact@v4
        with:
          name: guppy
          path: ./cli/dist/guppy

      - name: Setup keychain
        env:
          CERTIFICATE_BASE64: ${{ secrets.DEVELOPER_ID_CERT }}
          CERTIFICATE_PASSWORD: ${{ secrets.DEVELOPER_ID_CERT_PWD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PASSWORD=$(openssl rand -base64 32)
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Sign guppy binary
        run: codesign -s "Developer ID Application" ./cli/dist/guppy

      - name: Build macOS archive
        env: 
          VERSION: ${{ needs.build_cli.outputs.VERSION }}
          BUILD: ${{ needs.build_cli.outputs.BUILD }}
        run: make build-macos

      - name: Export macOS archive
        run: |
          xcodebuild \
            -exportArchive \
            -archivePath ./macos/build/guppy.xcarchive \
            -exportPath ./macos/build \
            -exportOptionsPlist ./macos/ExportOptions.plist
      
      - name: Create macOS installer
        run: |
          productbuild \
            --component ./macos/build/guppy.app /Applications \
            ./macos/build/guppy-${{ needs.build_cli.outputs.VERSION }}.pkg

      - name: Notarize macOS installer
        run: |
          xcrun notarytool submit \
            --team-id L8SL8KUNVD' \
            --apple-id ${{ secrets.NOTARY_USERNAME }} \
            --password ${{ secrets.NOTARY_PASSWORD }} \
            --wait \
            ./macos/build/guppy.pkg

      - name: Upload macOS app
        uses: actions/upload-artifact@v4
        with:
          name: guppy-${{ needs.build_cli.outputs.VERSION }}.pkg
          path: ./macos/build/guppy-${{ needs.build_cli.outputs.VERSION }}.pkg
          retention-days: 1
