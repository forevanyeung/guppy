name: Release guppy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  promote_to_release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      build_run_id: ${{ steps.build-run.outputs.run_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3

      # Find the successful build workflow run from the merged PR
      - name: Get Build Workflow Run
        id: build-run
        run: |
          run_id=$(gh api /repos/${{ github.repository }}/actions/runs \
            --jq '.workflow_runs[] | select(.head_sha == "${{ github.sha }}" and .name == "Build guppy" and .conclusion == "success") | .id' \
            | head -n1)
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download CLI artifact
        uses: actions/download-artifact@v4
        if: steps.build-run.outputs.run_id != ''
        with:
          name: guppy
          path: ./cli/dist
          run-id: ${{ steps.build-run.outputs.run_id }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        if: steps.build-run.outputs.run_id != ''
        with:
          name: guppy-${{ steps.gitversion.outputs.MajorMinorPatch }}.pkg
          path: ./macos/build
          run-id: ${{ steps.build-run.outputs.run_id }}

  build:
    needs: promote_to_release
    if: needs.promote_to_release.outputs.build_run_id == ''
    uses: ./.github/workflows/build.yaml
    secrets: inherit

  create_release:
    needs: [promote_to_release, build]
    if: always() && !failure() && !cancelled()
    runs-on: ubuntu-latest
    steps:
      - name: Download CLI artifact
        uses: actions/download-artifact@v4
        with:
          name: guppy
          path: ./cli/dist
          run-id: ${{ needs.promote_to_release.outputs.build_run_id != '' && needs.promote_to_release.outputs.build_run_id || github.run_id }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: guppy-${{ needs.promote_to_release.outputs.version }}.pkg
          path: ./macos/build
          run-id: ${{ needs.promote_to_release.outputs.build_run_id != '' && needs.promote_to_release.outputs.build_run_id || github.run_id }}

      - name: Make CLI executable
        run: chmod +x ./cli/dist/guppy

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.promote_to_release.outputs.version }}
        run: |
          gh release create "$VERSION" \
            --title "Guppy $VERSION" \
            --draft \
            --notes "Release notes for $VERSION" \
            "./cli/dist/guppy" \
            "./macos/build/guppy-$VERSION.pkg"
